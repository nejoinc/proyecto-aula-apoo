[
  {
    "Q": "¿Qué es la Programación Orientada a Objetos (POO)?",
    "A": "Un paradigma de programación que se basa en el concepto de objetos, entidades que combinan propiedades (atributos), comportamiento (métodos) e identidad."
  },
  {
    "Q": "Nombra tres componentes fundamentales de un objeto en POO.",
    "A": "Propiedades (Atributos), Comportamiento (Métodos), Identidad."
  },
  {
    "Q": "¿Qué es la Encapsulación en POO?",
    "A": "Consiste en ocultar los detalles internos de la implementación de un objeto, mostrando solo una interfaz pública. Protege los datos y facilita el mantenimiento."
  },
  {
    "Q": "¿Qué permite la Herencia en POO?",
    "A": "Crear nuevas clases basadas en clases existentes, heredando propiedades y comportamientos, pudiendo añadir o modificar funcionalidades."
  },
  {
    "Q": "¿Qué significa Polimorfismo en POO y qué beneficio aporta?",
    "A": "Significa 'muchas formas'. Permite que diferentes objetos respondan de manera diferente al mismo mensaje (llamada a método), aumentando la flexibilidad y reutilización del código."
  },
  {
    "Q": "¿Cuál es el propósito de la Abstracción en POO?",
    "A": "Simplificar la complejidad del mundo real modelando solo las características relevantes para el problema, ocultando la complejidad innecesaria."
  },
  {
    "Q": "En el ejemplo de Python, ¿qué hace el método `__init__`?",
    "A": "Es un constructor que inicializa los atributos del objeto al crearse."
  },
  {
    "Q": "Menciona dos beneficios de la POO.",
    "A": "Reutilización de código y Modularidad (desarrollo y prueba independiente de objetos)."
  }
]